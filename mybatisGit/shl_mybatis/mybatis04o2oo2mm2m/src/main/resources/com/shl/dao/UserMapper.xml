<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shl.dao.UserMapper">
    <!--用户对账号是一对多的关系-->
    <resultMap id="selectFindAll" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>
        <collection property="accounts" column="id" ofType="account" javaType="java.util.List">
            <id property="accountId" column="accountId"></id>
            <result property="money" column="money"></result>
            <result property="uid" column="uid"></result>
        </collection>

    </resultMap>

    <!--多对多关系,-->
    <resultMap id="selectFindAllUser" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>
        <!--collection中column是一方的主键,注意要使用别名-->
        <collection property="roles" ofType="role" javaType="java.util.List" column="id">
            <id property="id" column="roleid"></id>
            <result property="roleName" column="role_Name"></result>
            <result property="roleDesc" column="role_Desc"></result>
        </collection>
    </resultMap>

    <!--指定对应封装 但是一般是对应列名,还有另外注解的方式是最常用-->
    <resultMap id="resultMap" type="User">
        <result column="name" property="username"></result>
        <result column="day" property="birthday"></result>
        <result column="gender" property="sex"></result>
    </resultMap>


    <select id="findAllUser" resultMap="selectFindAllUser" resultType="user">
       SELECT u.*,r.id roleid,r.role_name,r.role_desc from user u left JOIN user_role ur on ur.uid=u.id LEFT join role r on r.id =ur.rid
    </select>

    <update id="updateById">
        update user SET username=#{username} WHERE id=#{id}
    </update>

    <insert id="saveUser" parameterType="User">
        insert into user(username,birthday,sex,address) VALUE(#{username},#{birthday},#{sex},#{address});
    </insert>

    <delete id="deleteUser">
        delete from user where id =#{id}
    </delete>

    <!--根据时间间隔查询-->
    <select id="findByCondition" resultType="User">

        <![CDATA[select * from user where birthday>=#{starDate} and birthday<=#{endDate}]]>
        <!--直接使用&lt;代替-->
    </select>

    <!--防止sql注入的方法:模糊查询-->
    <select id="findByUsernameLike" resultType="User">
        SELECT * from user where username like #{username}
    </select>

    <select id="findByUsernameLikeNotSecurity" resultType="User">
        SELECT  * from USER  where username like '%${value}%'
    </select>

    <select id="findAllToMap" resultMap="resultMap">
        select username name, birthday day,sex gender,address from user
    </select>

    <!--selectKey-->
    <insert id="findReturnId" parameterType="User">
        <selectKey keyColumn="id" keyProperty="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_Id()
        </selectKey>
        insert into user(username,birthday,sex,address) VALUE(#{username},#{birthday},#{sex},#{address});
    </insert>
</mapper>